--This is a project with queries that retrieve some questions about orders and customers in tables with monthly orders.

--1. How many orders were placed in January?  

select count(*) from JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
and orderID IS NOT NULL
and orderID <> '';

--2. How many of those orders were for an iPhone? 
select count(*) from JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
and orderID IS NOT NULL
and orderID <> ''
and Product = 'iPhone';

--3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--4. Which product was the cheapest one sold in January, and what was the price?

select product, min(price) from JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
and orderID IS NOT NULL
and orderID <> '';

--5. What is the total revenue for each product sold in January?

select product, sum(price) from JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
and orderID IS NOT NULL
and orderID <> ''
group by product
order by price;

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, 
--how many of each were sold, and what was the total revenue?
select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue,
location
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--7. How many customers ordered more than 2 products at a time, 
--and what was the average amount spent for those customers? 

select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

--Advanced Data Filtering Techniques in SQL

--1. 
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

--2. 
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

--3. 
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--4
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

--5. 
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--6. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct Product, sum(quantity) 
FROM BIT_DB.FebSales
where location LIKE '%los Angeles%'
group by Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
select distinct location, count(orderId)
from BIT_DB.JanSales
where location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
group by Location
having count(orderId) >=3;

--How many of each type of headphone were sold in February?

SELECT Product, sum(Quantity) as Quantity
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphone%'
GROUP BY Product;

--What was the average amount spent per account in February? 
SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--What was the average quantity of products purchased per account in February? 
select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?
select product, sum(quantity*price)
from BIT_DB.JanSales
    WHERE length(orderID) = 6 --EXCLUDE TRASH ORDERS.
    AND orderID <> 'Order ID'--EXCLUDE
    and orderID IS NOT NULL  --EXCLUDE
GROUP BY product
order by sum(quantity*price) desc
limit 1;
