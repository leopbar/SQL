/* For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL.*/

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata; --select all data from Spotifydata;

SELECT artist_name, popularity FROM BIT_DB.Spotifydata --Artist more popular
order by popularity desc
limit 1;

select artist_name, track_name --All track name from Olivia
from BIT_DB.Spotifydata
where artist_name like '%Olivia%';

select artist_name, count(track_name) from BIT_DB.Spotifydata -- Quantity of track name per artist 
group by artist_name
order by count(track_name) desc;

SELECT -- the avg popularity, danceability, and energy by artist and track.
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;
